import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

data = pd.read_csv('imdb_india_movies.csv')

data.head()

print(data.isnull().sum())

print(data.dtypes)

print(data.describe())

sns.histplot(data['rating'], bins=20, kde=True)
plt.title('Distribution of Movie Ratings')
plt.show()

data = data.dropna(subset=['rating'])

data['genre'] = data['genre'].fillna('Unknown')
data['director'] = data['director'].fillna('Unknown')

data = pd.get_dummies(data, columns=['genre', 'director'], drop_first=True)

X = data.drop(columns=['rating'])
y = data['rating']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

print(f"Mean Absolute Error: {mae}")
print(f"Mean Squared Error: {mse}")
print(f"Root Mean Squared Error: {rmse}")
print(f"R-squared: {r2}")

plt.scatter(y_test, y_pred)
plt.xlabel('Actual Ratings')
plt.ylabel('Predicted Ratings')
plt.title('Actual vs Predicted Ratings')
plt.show()
